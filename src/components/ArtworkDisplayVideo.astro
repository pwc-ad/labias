---
import { type VideoMetadata } from '@/constants/artworks';

interface Props {
	metadata: VideoMetadata;
	title?: string;
}

const { metadata, title } = Astro.props;
const { videoUrl, muxPlaybackId, posterUrl } = metadata;
---

<script>
	import '@mux/mux-video';
</script>
<div class="absolute inset-0 h-full w-full bg-black">
	{
		muxPlaybackId ? (
			<mux-video
				id="the-video"
				class="block h-full w-full object-contain"
				autoplay
				poster={posterUrl}
				playback-id={muxPlaybackId}
				metadata-video-title={title}
				disable-tracking
			/>
		) : (
			<video
				id="the-video"
				class="block h-full w-full object-contain"
				autoplay
				poster={posterUrl}
				src={videoUrl}
			/>
		)
	}
	<button
		id="play-pause-button"
		class="absolute inset-0 block size-full"
		data-cursor-interactive="Play video"
	>
		<span class="sr-only">Play/Pause</span>
	</button>
</div>
<script>
	import { CURSOR_DATA_ATTRIBUTES } from '@/constants/cursor';

	(function setupVideoPlayer() {
		const video = document.getElementById('the-video') as HTMLVideoElement;
		const button = document.getElementById(
			'play-pause-button'
		) as HTMLButtonElement;
		if (!video || !button) return;

		function updateButton() {
			const span = button.querySelector('span');
			if (!span) {
				return;
			}
			const text = video.paused ? 'Play' : 'Pause';
			span.textContent = text;
			button.setAttribute(
				CURSOR_DATA_ATTRIBUTES.cursorInteractive,
				`${text} Video`
			);
		}

		button.addEventListener('click', () => {
			if (video.paused) {
				video.play();
			} else {
				video.pause();
			}
			updateButton();
		});

		updateButton();
	})();
</script>
